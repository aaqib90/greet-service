# This workflow will build a Java project with Maven, Push the Image to Docker Hub and Deploy the App in OC/K8s Cluster
name: Sample CI-CD Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  my_awesome_job:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Clone the Code
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 
        
    - name: Compile the Code
      run: mvn -e compile

    - name: Test the Code
      run: mvn -e test
      
    - name: Package the Code
      run: mvn -e package -DskipTests     
      
    - name: Build the Image and Push to Registry
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.GREET_DOCKER_REPO }}:${{github.sha}} .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.GREET_DOCKER_REPO }}:${{github.sha}}
        
    - name: Login to OC Cluster
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.${{ secrets.OC_URL }}:6443
        openshift_token: ${{ secrets.OC_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ secrets.OC_NAMESPACE }}
        
    - name: Deploy the App in OC Cluster                
      run: |
        sed -i'' -e 's/DOCKER_USERNAME/${{ secrets.DOCKER_USERNAME }}/g' -e 's/NAME_SPACE/${{ secrets.OC_NAMESPACE }}/g' -e 's/OC_URL/${{ secrets.OC_URL }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' k8s.yaml
        oc apply -f k8s.yaml            